data <- read.csv("C:\\Users\\nikhi\\Downloads\\frequencyPerYearClean.csv")
averages <- read.csv("C:\\Users\\nikhi\\Downloads\\averages.csv")
plot <- averages  |>
filter(Rolling.Average > 0) |>
ggplot(aes(label = Word, size=Rolling.Average)) +
geom_text_wordcloud() +
scale_size_area(max_size = 30) +
theme_minimal()
library(tidyverse)
library(gt)
library(gtExtras)
library(ggimage)
library(ggthemes)
library(ggrepel)
library(dplyr)
library(gganimate)
library(transformr)
library(av)
library(ggplot2)
library(ggwordcloud)
plot <- averages  |>
filter(Rolling.Average > 0) |>
ggplot(aes(label = Word, size=Rolling.Average)) +
geom_text_wordcloud() +
scale_size_area(max_size = 30) +
theme_minimal()
plot2 <- plot + transition_time(Year) +
labs(subtitle = 'Year: {frame_time}')+
labs(title = "Top Words Of Billboard Songs",
caption="By: Nikhil Chinchalkar\nData: Billboard 100, LyricsGenius (Genius API), NTLK")+
theme(
plot.title = element_text(size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 14, hjust = 0.5)
)
animate(plot2, fps=5, end_pause=30)
animate(plot2, fps=5, height = 800, width =800)
animate(plot2, fps=5, height = 5,
width = 5, units = "in", res = 150)
View(averages)
library(tidyverse)
library(gt)
library(gtExtras)
library(ggimage)
library(ggthemes)
library(ggrepel)
library(dplyr)
library(zoo)
library(gganimate)
library(transformr)
library(av)
dataset <- read.csv("C:\\Users\\nikhi\\Downloads\\finalMatched.csv")
dataset$Compound.Score <- as.numeric(as.character(dataset$Compound.Score))
dataset <- dataset |>
mutate(negative = ifelse(Compound.Score < 0, 1, 0)) |>
mutate(positive = ifelse(Compound.Score > 0, 1, 0))
lines <- dataset |>
group_by(Year) |>
filter(!is.na(Compound.Score)) |>
filter(Compound.Score != 0) |>
summarize(
scoreAverage = mean(Compound.Score),
countNegative = sum(negative),
countPositive = sum(positive)
) |>
mutate(RANegative = rollmean(countNegative, k = 5, fill = NA, align="right")) |>
mutate(RAPositive = rollmean(countPositive, k = 5, fill = NA, align="right"))
colors <- c("Positive" = "blue", "Negative" = "red")
animation <- lines |>
filter(!is.na(RANegative)) |>
ggplot() +
geom_line(aes(x=Year, y=RANegative, color="Negative"), size=2)+
geom_line(aes(x=Year, y=RAPositive, color="Positive"), size=2)+
scale_color_identity(aesthetics = c("fill","color"))+
scale_color_manual(values = c("Negative" = "red", "Positive" = "blue"),
name = "Sentiment")+
theme_fivethirtyeight()+
scale_x_continuous(breaks=scales::pretty_breaks(n=8))+
scale_y_continuous(breaks=scales::pretty_breaks(n=8))+
theme(axis.title = element_text())+
transition_reveal(Year)+
ylab("Percent") +
xlab("Year")+
labs(subtitle = 'Year: {frame_along}')+
labs(title="Positive and Negative Sentiment Over Time",
caption="By: Nikhil Chinchalkar\nData: Billboard 100, Spotify API, NTLK")+
theme(plot.title = element_text(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = element_text(size = 16, hjust =0.5))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "bottom"))
animate(animation, fps = 5, duration = 15, end_pause=5, height = 900, width = 1600, units = "px")
animate(animation, fps = 5, duration = 15, end_pause=5, height = 5,
width = 5, units = "in", res = 150)
animate(animation, fps = 5, duration = 15, end_pause=5, height = 5,
width = 8, units = "in", res = 150)
animation <- lines |>
filter(!is.na(RANegative)) |>
ggplot() +
geom_line(aes(x=Year, y=RANegative, color="Negative"), size=2)+
geom_line(aes(x=Year, y=RAPositive, color="Positive"), size=2)+
scale_color_identity(aesthetics = c("fill","color"))+
scale_color_manual(values = c("Negative" = "#cc489c", "Positive" = "#52b5e7"),
name = "Sentiment")+
theme_fivethirtyeight()+
scale_x_continuous(breaks=scales::pretty_breaks(n=8))+
scale_y_continuous(breaks=scales::pretty_breaks(n=8))+
theme(axis.title = element_text())+
transition_reveal(Year)+
ylab("Percent") +
xlab("Year")+
labs(subtitle = 'Year: {frame_along}')+
labs(title="Sentiment Of The Billboard Top 100 Songs",
subtitle="Measured as a percent of songs with a positive/negative NLTK sentiment score",
caption="By: Nikhil Chinchalkar\nData: Billboard 100, NTLK")+
theme(plot.title = element_text(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = element_text(size = 16, hjust =0.5))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "bottom"))
animate(animation, fps = 5, duration = 15, end_pause=5, height = 5,
width = 8, units = "in", res = 150)
animation <- lines |>
filter(!is.na(RANegative)) |>
ggplot() +
geom_line(aes(x=Year, y=RANegative, color="Negative"), size=2)+
geom_line(aes(x=Year, y=RAPositive, color="Positive"), size=2)+
scale_color_identity(aesthetics = c("fill","color"))+
scale_color_manual(values = c("Negative" = "#cc489c", "Positive" = "#52b5e7"),
name = "Sentiment")+
theme_fivethirtyeight()+
scale_x_continuous(breaks=scales::pretty_breaks(n=8))+
scale_y_continuous(breaks=scales::pretty_breaks(n=8))+
theme(axis.title = element_text())+
transition_reveal(Year)+
ylab("Percent") +
xlab("Year")+
labs(subtitle = 'Year: {frame_along}')+
labs(title="Sentiment Of The Billboard Top 100 Songs",
subtitle="Measured as a percent of songs with a positive/negative NLTK sentiment score",
caption="By: Nikhil Chinchalkar\nData: Billboard 100, NTLK")+
theme(plot.title = element_text(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = element_text(size = 16, hjust =0.5))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "bottom"))+
theme(legend.title = element_text( size=2), legend.text=element_text(size=2))
animate(animation, fps = 5, duration = 15, end_pause=5, height = 5,
width = 8, units = "in", res = 200)
animate(animation, fps = 5, duration = 15, end_pause=5, height = 7,
width = 9, units = "in", res = 200)
animation <- lines |>
filter(!is.na(RANegative)) |>
ggplot() +
geom_line(aes(x=Year, y=RANegative, color="Negative"), size=2)+
geom_line(aes(x=Year, y=RAPositive, color="Positive"), size=2)+
scale_color_identity(aesthetics = c("fill","color"))+
scale_color_manual(values = c("Negative" = "#cc489c", "Positive" = "#52b5e7"),
name = "Sentiment")+
theme_fivethirtyeight()+
scale_x_continuous(breaks=scales::pretty_breaks(n=8))+
scale_y_continuous(breaks=scales::pretty_breaks(n=8))+
theme(axis.title = element_text())+
transition_reveal(Year)+
ylab("Percent") +
xlab("Year")+
labs(subtitle = 'Year: {frame_along}')+
labs(title="Sentiment Of The Billboard Top 100 Songs",
subtitle="Measured as a percent of songs with a positive/negative NLTK sentiment score",
caption="By: Nikhil Chinchalkar\nData: Billboard 100, NTLK")+
theme(plot.title = element_text(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = element_text(size = 16, hjust =0.5))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "top"))+
theme(legend.title = element_text( size=2), legend.text=element_text(size=2))
animate(animation, fps = 5, duration = 15, end_pause=5, height = 7,
width = 9, units = "in", res = 200)
animation <-
lines |>
filter(!is.na(RANegative)) |>
ggplot() +
geom_line(aes(x=Year, y=RANegative, color="Negative"), size=2)+
geom_line(aes(x=Year, y=RAPositive, color="Positive"), size=2)+
scale_color_identity(aesthetics = c("fill","color"))+
scale_color_manual(values = c("Negative" = "#cc489c", "Positive" = "#52b5e7"),
name = "Sentiment")+
theme_fivethirtyeight()+
scale_x_continuous(breaks=scales::pretty_breaks(n=8))+
scale_y_continuous(breaks=scales::pretty_breaks(n=8))+
theme(axis.title = element_text())+
#transition_reveal(Year)+
ylab("Percent") +
xlab("Year")+
labs(subtitle = 'Year: {frame_along}')+
labs(title="Sentiment Of The Billboard Top 100 Songs",
subtitle="Measured as a percent of songs with a positive/negative NLTK sentiment score",
caption="By: Nikhil Chinchalkar\nData: Billboard 100, NTLK")+
theme(plot.title = element_text(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = element_text(size = 16, hjust =0.5))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "bottom"))+
theme(legend.title = element_text( size=5), legend.text=element_text(size=5))
animation <-
lines |>
filter(!is.na(RANegative)) |>
ggplot() +
geom_line(aes(x=Year, y=RANegative, color="Negative"), size=2)+
geom_line(aes(x=Year, y=RAPositive, color="Positive"), size=2)+
scale_color_identity(aesthetics = c("fill","color"))+
scale_color_manual(values = c("Negative" = "#cc489c", "Positive" = "#52b5e7"),
name = "Sentiment")+
theme_fivethirtyeight()+
scale_x_continuous(breaks=scales::pretty_breaks(n=8))+
scale_y_continuous(breaks=scales::pretty_breaks(n=8))+
theme(axis.title = element_text())+
#transition_reveal(Year)+
ylab("Percent") +
xlab("Year")+
labs(subtitle = 'Year: {frame_along}')+
labs(title="Sentiment Of The Billboard Top 100 Songs",
subtitle="Measured as a percent of songs with a positive/negative NLTK sentiment score",
caption="By: Nikhil Chinchalkar\nData: Billboard 100, NTLK")+
theme(plot.title = element_text(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = element_text(size = 16, hjust =0.5))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "bottom"))+
theme(legend.title = element_text( size=5), legend.text=element_text(size=5))
animation <- lines |>
filter(!is.na(RANegative)) |>
ggplot() +
geom_line(aes(x=Year, y=RANegative, color="Negative"), size=2)+
geom_line(aes(x=Year, y=RAPositive, color="Positive"), size=2)+
scale_color_identity(aesthetics = c("fill","color"))+
scale_color_manual(values = c("Negative" = "#cc489c", "Positive" = "#52b5e7"),
name = "Sentiment")+
theme_fivethirtyeight()+
scale_x_continuous(breaks=scales::pretty_breaks(n=8))+
scale_y_continuous(breaks=scales::pretty_breaks(n=8))+
theme(axis.title = element_text())+
transition_reveal(Year)+
ylab("Percent") +
xlab("Year")+
labs(subtitle = 'Year: {frame_along}')+
labs(title="Sentiment Of The Billboard Top 100 Songs",
subtitle="Measured as a percent of songs with a positive/negative NLTK sentiment score",
caption="By: Nikhil Chinchalkar\nData: Billboard 100, NTLK")+
theme(plot.title = element_text(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = element_text(size = 16, hjust =0.5))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "bottom"))+
theme(legend.title = element_text( size=5), legend.text=element_text(size=5))
animate(animation, fps = 5, duration = 15, end_pause=5, height = 7,
width = 9, units = "in", res = 200)
animation <- lines |>
filter(!is.na(RANegative)) |>
ggplot() +
geom_line(aes(x=Year, y=RANegative, color="Negative"), size=2)+
geom_line(aes(x=Year, y=RAPositive, color="Positive"), size=2)+
scale_color_identity(aesthetics = c("fill","color"))+
scale_color_manual(values = c("Negative" = "#cc489c", "Positive" = "#52b5e7"),
name = "Sentiment")+
theme_fivethirtyeight()+
scale_x_continuous(breaks=scales::pretty_breaks(n=8))+
scale_y_continuous(breaks=scales::pretty_breaks(n=8))+
theme(axis.title = element_text())+
transition_reveal(Year)+
ylab("Percent") +
xlab("Year")+
labs(subtitle = 'Year: {frame_along}')+
labs(title="Sentiment Of The Billboard Top 100 Songs",
subtitle="Measured as a percent of songs with a positive/negative NLTK sentiment score",
caption="By: Nikhil Chinchalkar\nData: Billboard 100, NTLK")+
theme(plot.title = element_text(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = element_text(size = 16, hjust =0.5))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "bottom"))+
theme(legend.title = element_text( size=7), legend.text=element_text(size=7))
animate(animation, fps = 5, duration = 15, end_pause=5, height = 7,
width = 9, units = "in", res = 200)
animation <- lines |>
filter(!is.na(RANegative)) |>
ggplot() +
geom_line(aes(x=Year, y=RANegative, color="Negative"), size=2)+
geom_line(aes(x=Year, y=RAPositive, color="Positive"), size=2)+
scale_color_identity(aesthetics = c("fill","color"))+
scale_color_manual(values = c("Negative" = "#cc489c", "Positive" = "#52b5e7"),
name = "Sentiment")+
theme_fivethirtyeight()+
scale_x_continuous(breaks=scales::pretty_breaks(n=8))+
scale_y_continuous(breaks=scales::pretty_breaks(n=8))+
theme(axis.title = element_text())+
transition_reveal(Year)+
ylab("Percent") +
xlab("Year")+
labs(subtitle = 'Year: {frame_along}')+
labs(title="Sentiment Of The Billboard Top 100 Songs",
subtitle="Measured as a percent of songs with a positive/negative NLTK sentiment score",
caption="By: Nikhil Chinchalkar\nData: Billboard 100, NTLK")+
theme(plot.title = element_text(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = element_text(size = 16, hjust =0.5))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "bottom"))+
theme(legend.title = element_text( size=8), legend.text=element_text(size=8))
animate(animation, fps = 5, duration = 15, end_pause=5, height = 7,
width = 9, units = "in", res = 200)
animation <- lines |>
filter(!is.na(RANegative)) |>
ggplot() +
geom_line(aes(x=Year, y=RANegative, color="Negative"), size=2)+
geom_line(aes(x=Year, y=RAPositive, color="Positive"), size=2)+
scale_color_identity(aesthetics = c("fill","color"))+
scale_color_manual(values = c("Negative" = "#cc489c", "Positive" = "#52b5e7"),
name = "Sentiment")+
theme_fivethirtyeight()+
scale_x_continuous(breaks=scales::pretty_breaks(n=8))+
scale_y_continuous(breaks=scales::pretty_breaks(n=8))+
theme(axis.title = element_text())+
transition_reveal(Year)+
ylab("Percent of Top 100") +
xlab("Year")+
labs(subtitle = 'Year: {frame_along}')+
labs(title="Sentiment Of The Billboard Top 100 Songs",
subtitle="Measured as a percent of songs with a positive/negative NLTK sentiment score",
caption="By: Nikhil Chinchalkar\nData: Billboard 100, NTLK")+
theme(plot.title = element_text(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = element_text(size = 16, hjust =0.5))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "bottom"))+
theme(legend.title = element_text( size=8), legend.text=element_text(size=8))
animation <- lines |>
filter(!is.na(RANegative)) |>
ggplot() +
geom_line(aes(x=Year, y=RANegative, color="Negative"), size=2)+
geom_line(aes(x=Year, y=RAPositive, color="Positive"), size=2)+
scale_color_identity(aesthetics = c("fill","color"))+
scale_color_manual(values = c("Negative" = "#cc489c", "Positive" = "#52b5e7"),
name = "Sentiment")+
theme_fivethirtyeight()+
scale_x_continuous(breaks=scales::pretty_breaks(n=8))+
scale_y_continuous(breaks=scales::pretty_breaks(n=8))+
theme(axis.title = element_text())+
transition_reveal(Year)+
ylab("Percent of Top 100") +
xlab("Year")+
labs(subtitle = 'Year: {frame_along}')+
labs(title="Sentiment Of The Billboard Top 100 Songs",
subtitle="Measured as a percent of songs with a positive/negative NLTK sentiment score",
caption="By: Nikhil Chinchalkar\nData: Billboard 100, NTLK")+
theme(plot.title = element_text(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = element_text(size = 16, hjust =0.5))+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5,
label.position = "bottom"))+
theme(legend.title = element_text( size=9), legend.text=element_text(size=9))
animate(animation, fps = 5, duration = 15, end_pause=5, height = 7,
width = 9, units = "in", res = 200)
